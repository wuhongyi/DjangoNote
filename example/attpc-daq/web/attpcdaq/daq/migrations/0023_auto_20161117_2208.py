# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-11-17 22:08
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('daq', '0022_auto_20161011_1258'),
    ]

    operations = [
        migrations.CreateModel(
            name='DataRouter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('ip_address', models.GenericIPAddressField(verbose_name='Data router IP address')),
                ('port', models.PositiveIntegerField(default=46005, verbose_name='Data router port')),
                ('connection_type', models.CharField(choices=[('ICE', 'ICE'), ('TCP', 'TCP'), ('FDT', 'FDT'), ('ZBUF', 'ZBUF')], default='TCP', max_length=4)),
                ('log_path', models.CharField(default='~/Library/Logs/dataRouter.log', max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='ECCServer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('ip_address', models.GenericIPAddressField(verbose_name='ECC server IP address')),
                ('port', models.PositiveIntegerField(default=8083, verbose_name='ECC server port')),
                ('log_path', models.CharField(default='~/Library/Logs/getEccSoapServer.log', max_length=500)),
                ('state', models.IntegerField(choices=[(1, 'Idle'), (2, 'Described'), (3, 'Prepared'), (4, 'Ready'), (5, 'Running')], default=1)),
                ('is_transitioning', models.BooleanField(default=False)),
            ],
        ),
        migrations.RemoveField(
            model_name='configid',
            name='data_source',
        ),
        migrations.RemoveField(
            model_name='datasource',
            name='data_router_ip_address',
        ),
        migrations.RemoveField(
            model_name='datasource',
            name='data_router_log_path',
        ),
        migrations.RemoveField(
            model_name='datasource',
            name='data_router_port',
        ),
        migrations.RemoveField(
            model_name='datasource',
            name='data_router_type',
        ),
        migrations.RemoveField(
            model_name='datasource',
            name='ecc_ip_address',
        ),
        migrations.RemoveField(
            model_name='datasource',
            name='ecc_log_path',
        ),
        migrations.RemoveField(
            model_name='datasource',
            name='ecc_port',
        ),
        migrations.RemoveField(
            model_name='datasource',
            name='is_transitioning',
        ),
        migrations.RemoveField(
            model_name='datasource',
            name='selected_config',
        ),
        migrations.RemoveField(
            model_name='datasource',
            name='state',
        ),
        migrations.AddField(
            model_name='eccserver',
            name='selected_config',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='daq.ConfigId'),
        ),
        migrations.AddField(
            model_name='configid',
            name='ecc_server',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='daq.ECCServer'),
        ),
        migrations.AddField(
            model_name='datasource',
            name='data_router',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='daq.DataRouter'),
        ),
        migrations.AddField(
            model_name='datasource',
            name='ecc_server',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='daq.ECCServer'),
        ),
    ]
